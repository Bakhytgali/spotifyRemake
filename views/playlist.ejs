<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Spotify Remake</title>
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/styles/global.css">
    <link rel="stylesheet" href="../styles/playlist.css">
</head>
<body>

<main id="main" class="mt-5">
    <div class="container-fluid">
        <div class="row">
            <div class="sidebar col-md-2">
                <a class="navbar-brand" href="#">
                    <img src="https://uxwing.com/wp-content/themes/uxwing/download/brands-and-social-media/spotify-white-icon.png" alt="" width="50">
                </a>
                <a href="./" class="nav-link active">
                    Home
                </a>
                <a href="./search" class="nav-link">
                    Search
                </a>
                <a href="./account" class="nav-link">
                    My Playlists
                </a>
            </div>

            <div class="playlist-content">

                <div class="playlist-info">
                    <img src="<%= playlist.images[0].url %>" alt="<%= playlist.name %>" width="30%">
                    <div class="playlist-title">
                        <%= playlist.name %>
                    </div>
                </div>

                <div class="song-list">
                    <ol>
                        <% playlist.tracks.items.forEach(track => { %>
                            <li class="song-item" data-track-id="<%= track.track.id %>">
                                <%= track.track.name %> - <%= track.track.artists.map(artist => artist.name).join(', ') %>
                                <button type="button" class="delete-button" playlist-id="<%= playlist.id %>" track-id="<%= track.track.id%>">
                                    Delete
                                </button>
                            </li>
                        <% }); %>
                    </ol>
                </div>

            </div>

        </div>
    </div>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/js-cookie/2.0.4/js.cookie.min.js">

    </script>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const accessToken = Cookies.get("accessToken");
            console.log(accessToken);

            const songs = document.querySelectorAll(".song-item");
            songs.forEach(song => {
                song.addEventListener("click", () => {
                    const songId = song.getAttribute("data-track-id");
                    playSong(songId, accessToken);
                });
            });

            const deleteBtns = document.querySelectorAll(".delete-button");

            deleteBtns.forEach(btn => {
                const trackId = btn.getAttribute("track-id");
                const playlist = btn.getAttribute("playlist-id");

                btn.addEventListener("click", function() {
                    deleteFromPlaylist(trackId, playlist, accessToken);
                });
            });
        });

        async function deleteFromPlaylist(trackId, playlist, accessToken) {
            try {
                const response = await fetch(`https://api.spotify.com/v1/playlists/${playlist}/tracks`, {
                    method: "DELETE",
                    headers: {
                        "Authorization": `Bearer ${accessToken}`,
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        tracks: [{ "uri": `spotify:track:${trackId}` }]
                    })
                });

                if (!response.ok) {
                    new Error("Failed to delete track from playlist");
                }
                location.reload();
                alert(`The track was removed`);
            } catch (error) {
                console.error('Error deleting track from playlist:', error);
                throw error;
            }
        }

        async function playSong(songId, accessToken) {
            try {
                const response = await fetch(
                    'https://api.spotify.com/v1/me/player/play',
                    {
                        method: "PUT",
                        headers: {
                            'Authorization': `Bearer ${accessToken}`,
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            uris: [`spotify:track:${songId}`]
                        })
                    }
                );

                if (!response.ok) {
                    throw new Error('Failed to play song');
                }

                console.log(`Song with ID ${songId} is now playing.`);
            } catch (error) {
                console.error('Error playing song:', error);
                throw error;
            }
        }
    </script>
</main>
</body>
</html>
