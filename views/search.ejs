<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Search</title>
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/styles/global.css">
    <link rel="stylesheet" href="../styles/search.css">
</head>
<body>

<div class="row container pt-5">
    <div class="sidebar col-md-2">
        <a class="navbar-brand" href="#">
            <img src="https://uxwing.com/wp-content/themes/uxwing/download/brands-and-social-media/spotify-white-icon.png" alt="" width="50">
        </a>
        <a href="./" class="nav-link">
            Home
        </a>
        <a href="./search" class="nav-link">
            Search
        </a>
        <a href="./account" class="nav-link active">
            My Playlists
        </a>
    </div>

    <div class="main col-md-6">
        <label>
            <input type="text" name="search" class="search">
            <button type="button" class="button"> Search </button>
        </label>

        <div class="searchResults">

            <ul id="searchResultsList">

            </ul>

        </div>

        <div class="user-playlists">

        </div>

    </div>

    <div class="userPlaylists">
        <ul id="userPlaylistsList">

        </ul>
    </div>

</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/js-cookie/2.0.4/js.cookie.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {

        const accessToken = Cookies.get("accessToken");

        document.querySelector(".button").addEventListener("click", search);

        async function search() {
            const query = document.querySelector(".search").value;
            const searchResultsList = document.getElementById('searchResultsList');
            searchResultsList.innerHTML = '';

            try {
                const response = await fetch(`https://api.spotify.com/v1/search?q=${encodeURIComponent(query)}&type=track`, {
                    method: "GET",
                    headers: {
                        'Authorization': `Bearer ${accessToken}`
                    }
                });

                if (!response.ok) {
                    throw new Error("Network response was not ok");
                }

                const data = await response.json();

                data.tracks.items.forEach(track => {
                    const li = document.createElement("li");
                    li.textContent = `${track.name} - ${track.artists[0].name}`;
                    li.dataset.trackId = track.id; 
                    li.classList.add("song");

                    const playButton = document.createElement("button");
                    playButton.textContent = "Play";
                    playButton.classList.add("play-button");
                    li.appendChild(playButton);

                    searchResultsList.appendChild(li);
                    
                    playButton.addEventListener("click", function() {
                        playSong(track.id);
                    });

                    const addButton = document.createElement("button");
                    addButton.textContent = "Add";
                    addButton.classList.add("add-button");
                    li.appendChild(addButton);

                    addButton.addEventListener("click", function() {
                        showUserPlaylists();
                    });

                });
            } catch (error) {
                console.error("Error fetching data:", error);
            }
        }

        async function playSong(songId) {
            try {
                const response = await fetch(
                    'https://api.spotify.com/v1/me/player/play',
                    {
                        method: "PUT",
                        headers: {
                            'Authorization': `Bearer ${accessToken}`,
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            uris: [`spotify:track:${songId}`]
                        })
                    }
                );

                if (!response.ok) {
                    throw new Error('Failed to play song');
                }

                console.log(`Song with ID ${songId} is now playing.`);
            } catch (error) {
                console.error('Error playing song:', error);
                throw error;
            }
        }

        async function showUserPlaylists() {

        }

    });
</script>


</body>
</html>
